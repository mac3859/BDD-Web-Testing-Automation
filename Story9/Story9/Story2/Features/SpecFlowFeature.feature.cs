// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Story2.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Login")]
    public partial class LoginFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecFlowFeature.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Login", "\tIn order to login successfully\r\n\tAs a user\r\n\tI want to check valid and invalid l" +
                    "ogin results", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("login with valid application")]
        [NUnit.Framework.CategoryAttribute("Story1")]
        public virtual void LoginWithValidApplication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("login with valid application", new string[] {
                        "Story1"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am in login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I input the valid user application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("I can login and see avatar image", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("login with valid application, and Remember Me is selected")]
        [NUnit.Framework.CategoryAttribute("Story1")]
        public virtual void LoginWithValidApplicationAndRememberMeIsSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("login with valid application, and Remember Me is selected", new string[] {
                        "Story1"});
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
    testRunner.Given("I am in login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.When("I input the valid user application and select Remember Me", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("I can login and see avatar image", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("login with invalid application")]
        [NUnit.Framework.CategoryAttribute("Story1")]
        public virtual void LoginWithInvalidApplication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("login with invalid application", new string[] {
                        "Story1"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
    testRunner.Given("I am in login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.When("I input the invalid user application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("I cannot login and see error messages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("logout the current login page")]
        [NUnit.Framework.CategoryAttribute("Story2")]
        public virtual void LogoutTheCurrentLoginPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("logout the current login page", new string[] {
                        "Story2"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
    testRunner.Given("I am already in login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.When("I click logut button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("I can logout and see login screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("choose and upload a new avatar icon")]
        [NUnit.Framework.CategoryAttribute("Story3")]
        public virtual void ChooseAndUploadANewAvatarIcon()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("choose and upload a new avatar icon", new string[] {
                        "Story3"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
    testRunner.Given("I am already in picture uploading page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
 testRunner.When("I upload a new picture", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("I can see a new avatar icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("verify register error message")]
        [NUnit.Framework.CategoryAttribute("Story4")]
        public virtual void VerifyRegisterErrorMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify register error message", new string[] {
                        "Story4"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
    testRunner.Given("I am already in register page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
 testRunner.When("I input invalid register information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then("I can see error message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("verify reset password error message")]
        [NUnit.Framework.CategoryAttribute("Story5")]
        [NUnit.Framework.TestCaseAttribute("e", "请输入有效的电子邮件地址", null)]
        [NUnit.Framework.TestCaseAttribute("e@outlook.com", "该邮箱地址没有注册过帐号", null)]
        public virtual void VerifyResetPasswordErrorMessage(string wrongEmails, string errorMessage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Story5"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("verify reset password error message", @__tags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
    testRunner.Given("I am already in reset password page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.When(string.Format("I enter \"{0}\"", wrongEmails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then(string.Format("I can see \"{0}\" of resetting", errorMessage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("user can update the basic info")]
        [NUnit.Framework.CategoryAttribute("Story6")]
        public virtual void UserCanUpdateTheBasicInfo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("user can update the basic info", new string[] {
                        "Story6"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
   testRunner.Given("I am already in basic info setting page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
   testRunner.When("I update info and click save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
   testRunner.Then("I can see alert success message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("validation should work")]
        [NUnit.Framework.CategoryAttribute("Story6")]
        public virtual void ValidationShouldWork()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("validation should work", new string[] {
                        "Story6"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
   testRunner.Given("I am already in basic info setting page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
   testRunner.When("I entre error profile info", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
   testRunner.Then("the error message as below should be seen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("do default search for course order")]
        [NUnit.Framework.CategoryAttribute("Story8")]
        public virtual void DoDefaultSearchForCourseOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("do default search for course order", new string[] {
                        "Story8"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
   testRunner.Given("I am already in course order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
   testRunner.When("I click search buttton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
   testRunner.Then("I can see some orders", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("do default search for class order")]
        [NUnit.Framework.CategoryAttribute("Story8")]
        public virtual void DoDefaultSearchForClassOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("do default search for class order", new string[] {
                        "Story8"});
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
   testRunner.Given("I am already in class order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
   testRunner.When("I click search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
   testRunner.Then("I can see some orders", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("do multiple search for course")]
        [NUnit.Framework.CategoryAttribute("Story8")]
        public virtual void DoMultipleSearchForCourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("do multiple search for course", new string[] {
                        "Story8"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
   testRunner.Given("I am already in course order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
   testRunner.When("I search for course order through filters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
   testRunner.Then("I can see actual result match expected result", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("do multiple search for class")]
        [NUnit.Framework.CategoryAttribute("Story8")]
        public virtual void DoMultipleSearchForClass()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("do multiple search for class", new string[] {
                        "Story8"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 85
   testRunner.Given("I am already in class order page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
   testRunner.When("I search for class order through filters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
   testRunner.Then("I can see actual result match expected result", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("do filter search on info management page")]
        [NUnit.Framework.CategoryAttribute("Story9")]
        public virtual void DoFilterSearchOnInfoManagementPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("do filter search on info management page", new string[] {
                        "Story9"});
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
   testRunner.Given("I am already in info management page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
   testRunner.When("I search item based on category,keyword,property and status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
   testRunner.Then("I can see search result match expected result", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("change the status of an article")]
        [NUnit.Framework.CategoryAttribute("Story9")]
        public virtual void ChangeTheStatusOfAnArticle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("change the status of an article", new string[] {
                        "Story9"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line 97
   testRunner.Given("I am already in info management page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
   testRunner.When("I change the status of an article", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
   testRunner.Then("I can see updated status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
   testRunner.Then("I do vice verse change the status of the article", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 101
   testRunner.Then("I can see updated status again", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("add a category on info management page")]
        [NUnit.Framework.CategoryAttribute("Story9")]
        public virtual void AddACategoryOnInfoManagementPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("add a category on info management page", new string[] {
                        "Story9"});
#line 104
this.ScenarioSetup(scenarioInfo);
#line 105
   testRunner.Given("I am in article category page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
   testRunner.When("I add new category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
   testRunner.Then("I can see new added category on the UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("add a category and edit the name")]
        [NUnit.Framework.CategoryAttribute("Story9")]
        public virtual void AddACategoryAndEditTheName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("add a category and edit the name", new string[] {
                        "Story9"});
#line 110
this.ScenarioSetup(scenarioInfo);
#line 111
   testRunner.Given("I am in article category page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 112
   testRunner.When("I add new category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
   testRunner.And("I edit the name of new category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
   testRunner.Then("I can see new name of category on the UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
